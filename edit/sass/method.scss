$phase: ($container * .085);
$method: ($phase * 2.6);
$arrow: $gap4;
$curve: ($method - ($arrow * 2));
$feedback: ($phase * .7);



.tab-pane {
  padding-top: $gap2;
  .description {
    display: grid;
    grid-template-columns: 1fr 3fr;
    h1, h2, h3, h4 {
      margin: 0;
    }
  }
}

.diagram {
 display: grid;
 grid-template-columns: ($phase * 0.7) $phase repeat(3, $method) 1fr;

 .phase {
   height: $method;
   background: none;
   .arrow {
    background-color: $c-arrow;
    background-repeat: no-repeat;
    &.curve, &.feedback {
      height: ($curve / 2);
      width: $curve;
      position: absolute;
      background-size: ($curve + 2);
      background-position: -1px 0;
      margin-left: ($arrow + $gap2);
      z-index: 0;
    }
    &.curve {
      background-image: url(../images/arrow-curve.svg);
      margin-top: $gap4;
    }
    &.feedback {
      background-image: url(../images/arrow-feedback.svg);
      margin-top: (($curve - $gap5));
    }
    &.simple {
      margin-top: (($method - $phase) / 2);
      background-image: url(../images/arrow.svg);
      background-size:  $gap16 $gap16;
      background-position: right center;
      height: $phase;
      float: left;
      width: $arrow;
    }
  }
  a {
    background-color: $c-phase;
    position: absolute;
    z-index: 5;
    background-color: $c-phase;
    @include transition;
    border: solid 1px white;

   &.simple {
    height: $phase;
    width: $phase;
    @include radius($radius);
    margin-top: (($method - $phase) / 2);
  }
  &.feedback {
    margin-top: $gap7;
    height: $feedback;
    width: $feedback;
    @include radius(50%);
    margin-top: (($method - $feedback) / 2);
    margin-left: ($method - $feedback - $arrow);
  }
}
&.framing a {
  z-index: 10;
  @include rotate(7);
  margin-top: ((($method - $phase) / 2) - 15);
}
&.scope a {
  margin-left: 0;
}
a:hover {
     @include scale(1.15);
   }
}
}


@mixin open-phase($duration: $animation-duration, $function: $animation-function, $delay: $animation-delay, $count: $animation-count, $fill: $animation-fill, $visibility: $animation-visibility) {
  @include animation(open-phase $duration $function $delay $count $fill);
  @include visibility($visibility);
  @at-root {
    @include keyframes(open-phase) {
      100% {
       background-color: $c-phase-open;
     }
   }
 }
}

@mixin open-arrow($duration: $animation-duration, $function: $animation-function, $delay: $animation-delay, $count: $animation-count, $fill: $animation-fill, $visibility: $animation-visibility) {
  @include animation(open-arrow $duration $function $delay $count $fill);
  @include visibility($visibility);
  @at-root {
    @include keyframes(open-arrow) {
      100% {
       background-color: $c-arrow-open;
     }
   }
 }
}
.phases .cue p {
    @include fadeIn($delay: ($animation-delay * 2));
  }
.phase {

  &.open {
      .arrow {
        &.simple, &.curve, &.feedback {
          @include open-arrow($delay: ($animation-delay * 3));
        }
      }
      a {
        &.simple,  &.feedback {
          @include open-phase($delay: ($animation-delay * 3));
        }
      }
    }
}